name: Backend CI/CD

on:
    push:
        branches:
            - main # Ganti dengan branch default kamu
    pull_request:
        branches:
            - main # Ganti dengan branch default kamu

jobs:
    build:
        name: Build and Test
        runs-on: ubuntu-latest

        steps:
            - name: Checkout Code
              uses: actions/checkout@v4

            - name: Set up JDK 17
              uses: actions/setup-java@v4
              with:
                  distribution: 'corretto'
                  java-version: '17'

            - name: Build with Maven
              run: mvn -B package --file pom.xml

            - name: Run Tests
              run: mvn -B test --file pom.xml

            - name: Upload Artifact
              uses: actions/upload-artifact@v4
              with:
                  name: backend-jar
                  path: target/backend-*.jar

    docker-build-push:
        name: Docker Build and Push
        needs: build # Depend on 'build' job success
        runs-on: ubuntu-latest

        env:
            DOCKER_IMAGE: <nama-user-dockerhub>/<nama-image-backend> # Ganti dengan nama image kamu di Docker Hub
            DOCKER_TAG: ${{ github.run_number }} # Menggunakan run number sebagai tag

        steps:
            - name: Checkout Code
              uses: actions/checkout@v4

            - name: Download Artifact
              uses: actions/download-artifact@v4
              with:
                  name: backend-jar
                  path: target/

            - name: Docker Login
              run: docker login -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }} docker.io

            - name: Build Docker Image
              run: docker build -t ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }} .
              working-directory: ./backend # Asumsikan Dockerfile ada di folder 'backend'

            - name: Push Docker Image
              run: docker push ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}

    deploy:
        name: Deploy
        needs: docker-build-push
        runs-on: ubuntu-latest

        steps:
            - name: Deploy To Server # Contoh sederhana
              run: |
                  echo "Deploying to server with image: ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}"
                  # Tambahkan perintah deploy ke server kamu, misal dengan SSH atau tool lain seperti Kubernetes/Docker Compose

#Penjelasan Workflow Backend:
#
#name: Backend CI/CD: Nama workflow ini.
#
#    on:: Triggers workflow ini saat ada push atau pull_request ke branch main (sesuaikan).
#
#    jobs:: Mendefinisikan serangkaian pekerjaan (jobs) yang akan dijalankan.
#
#build:
#
#runs-on: ubuntu-latest: Menjalankan job di virtual environment Ubuntu terbaru.
#
#    steps:: Serangkaian step yang dijalankan.
#
#Checkout Code: Meng-checkout kode dari repo.
#
#Set up JDK 17: Setup JDK versi 17.
#
#Build with Maven: Melakukan build dengan Maven.
#
#Run Tests: Menjalankan unit tests dengan Maven.
#
#Upload Artifact: Mengunggah hasil build (JAR) sebagai artifact.
#
#docker-build-push:
#
#needs: build: Job ini berjalan setelah job build berhasil.
#
#env: Variabel environment.
#
#DOCKER_IMAGE: Nama image Docker kamu di Docker Hub. Ganti dengan nama repository kamu.
#
#DOCKER_TAG: Menggunakan github.run_number sebagai tag.
#
#    steps::
#
#Checkout Code: Meng-checkout kode dari repo.
#
#Download Artifact: Mengunduh artifact JAR yang dihasilkan di job build.
#
#Docker Login: Melakukan login ke Docker Hub menggunakan GITHUB_TOKEN.
#
#Build Docker Image: Membangun image Docker dari Dockerfile di folder backend.
#
#Push Docker Image: Mengirim image Docker ke Docker Hub.
#
#deploy:
#
#needs: docker-build-push: Job ini berjalan setelah job docker-build-push berhasil.
#
#    steps::
#
#Deploy To Server: Contoh sederhana untuk menunjukkan langkah deploy. Ganti dengan cara deploy yang sesuai dengan infrastruktur kamu.