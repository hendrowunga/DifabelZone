name: Frontend CI/CD

on:
    push:
        branches:
            - main # Ganti dengan branch default kamu
    pull_request:
        branches:
            - main # Ganti dengan branch default kamu

jobs:
    build:
        name: Build
        runs-on: ubuntu-latest

        steps:
            - name: Checkout Code
              uses: actions/checkout@v4

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '18' # Sesuaikan dengan versi Node kamu

            - name: Install Dependencies
              run: npm install

            - name: Build React App
              run: npm run build

            - name: Upload Artifact
              uses: actions/upload-artifact@v4
              with:
                  name: frontend-build
                  path: build # Hasil build React

    docker-build-push:
        name: Docker Build and Push
        needs: build
        runs-on: ubuntu-latest

        env:
            DOCKER_IMAGE: <nama-user-dockerhub>/<nama-image-frontend> # Ganti dengan nama image kamu di Docker Hub
            DOCKER_TAG: ${{ github.run_number }} # Menggunakan run number sebagai tag

        steps:
            - name: Checkout Code
              uses: actions/checkout@v4

            - name: Download Artifact
              uses: actions/download-artifact@v4
              with:
                  name: frontend-build
                  path: build

            - name: Docker Login
              run: docker login -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }} docker.io

            - name: Build Docker Image
              run: docker build -t ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }} .
              working-directory: ./frontend # Asumsikan Dockerfile ada di folder 'frontend'

            - name: Push Docker Image
              run: docker push ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}

    deploy:
        name: Deploy
        needs: docker-build-push
        runs-on: ubuntu-latest

        steps:
            - name: Deploy To Server # Contoh sederhana
              run: |
                  echo "Deploying to server with image: ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}"
                  # Tambahkan perintah deploy ke server kamu, misal dengan SSH atau tool lain seperti Kubernetes/Docker Compose

#Penjelasan Workflow Frontend:
#
#name: Frontend CI/CD: Nama workflow ini.
#
#    on:: Triggers workflow ini saat ada push atau pull_request ke branch main (sesuaikan).
#
#    jobs:: Mendefinisikan serangkaian pekerjaan (jobs) yang akan dijalankan.
#
#build:
#
#runs-on: ubuntu-latest: Menjalankan job di virtual environment Ubuntu terbaru.
#
#    steps:: Serangkaian step yang dijalankan.
#
#Checkout Code: Meng-checkout kode dari repo.
#
#Set up Node.js: Setup Node.js versi 18 (sesuaikan).
#
#Install Dependencies: Menjalankan npm install untuk mengunduh dependencies.
#
#Build React App: Membangun aplikasi React dengan npm run build.
#
#Upload Artifact: Mengunggah hasil build (folder build) sebagai artifact.
#
#docker-build-push:
#
#needs: build: Job ini berjalan setelah job build berhasil.
#
#env: Variabel environment.
#
#DOCKER_IMAGE: Nama image Docker kamu di Docker Hub. Ganti dengan nama repository kamu.
#
#DOCKER_TAG: Menggunakan github.run_number sebagai tag.
#
#    steps::
#
#Checkout Code: Meng-checkout kode dari repo.
#
#Download Artifact: Mengunduh artifact hasil build dari job build.
#
#Docker Login: Melakukan login ke Docker Hub.
#
#Build Docker Image: Membangun image Docker dari Dockerfile di folder frontend.
#
#Push Docker Image: Mengirim image Docker ke Docker Hub.
#
#deploy:
#
#needs: docker-build-push: Job ini berjalan setelah job docker-build-push berhasil.
#
#    steps::
#
#Deploy To Server: Contoh sederhana untuk menunjukkan langkah deploy. Ganti dengan cara deploy yang sesuai dengan infrastruktur kamu.